<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eduonline.dao.OfflineCourseMapper" >
  <resultMap id="BaseResultMap" type="com.eduonline.model.OfflineCourse" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="cretate_time" property="cretateTime" jdbcType="TIMESTAMP" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, cretate_time, start_time, end_time, place, detail, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from us_offlinecourse
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from us_offlinecourse
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.eduonline.model.OfflineCourse" >
    insert into us_offlinecourse (id, title, cretate_time, 
      start_time, end_time, place, 
      detail, state)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{cretateTime,jdbcType=TIMESTAMP}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{place,jdbcType=VARCHAR}, 
      #{detail,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.eduonline.model.OfflineCourse" >
    insert into us_offlinecourse
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="cretateTime != null" >
        cretate_time,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="place != null" >
        place,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="cretateTime != null" >
        #{cretateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.eduonline.model.OfflineCourse" >
    update us_offlinecourse
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="cretateTime != null" >
        cretate_time = #{cretateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null" >
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eduonline.model.OfflineCourse" >
    update us_offlinecourse
    set title = #{title,jdbcType=VARCHAR},
      cretate_time = #{cretateTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      place = #{place,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>