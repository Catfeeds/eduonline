<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eduonline.dao.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.eduonline.model.Course" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="modify_time" property="modifyTime" jdbcType="DATE" />
    <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
    <result column="free_state" property="freeState" jdbcType="VARCHAR" />
    <result column="cover_id" property="coverId" jdbcType="BIGINT" />
    <result column="salary" property="salary" jdbcType="DECIMAL" />
    <result column="commend_state" property="commendState" jdbcType="VARCHAR" />
    <result column="offlinecourse_id" property="offlinecourseId" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, introduce, create_time, modify_time, pic_url, free_state, cover_id, salary, 
    commend_state, offlinecourse_id, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from us_course
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from us_course
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.eduonline.model.Course" >
    insert into us_course (id, name, introduce, 
      create_time, modify_time, pic_url, 
      free_state, cover_id, salary, 
      commend_state, offlinecourse_id, state
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=DATE}, #{modifyTime,jdbcType=DATE}, #{picUrl,jdbcType=VARCHAR}, 
      #{freeState,jdbcType=VARCHAR}, #{coverId,jdbcType=BIGINT}, #{salary,jdbcType=DECIMAL}, 
      #{commendState,jdbcType=VARCHAR}, #{offlinecourseId,jdbcType=BIGINT}, #{state,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.eduonline.model.Course" >
    insert into us_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="picUrl != null" >
        pic_url,
      </if>
      <if test="freeState != null" >
        free_state,
      </if>
      <if test="coverId != null" >
        cover_id,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="commendState != null" >
        commend_state,
      </if>
      <if test="offlinecourseId != null" >
        offlinecourse_id,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=DATE},
      </if>
      <if test="picUrl != null" >
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="freeState != null" >
        #{freeState,jdbcType=VARCHAR},
      </if>
      <if test="coverId != null" >
        #{coverId,jdbcType=BIGINT},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=DECIMAL},
      </if>
      <if test="commendState != null" >
        #{commendState,jdbcType=VARCHAR},
      </if>
      <if test="offlinecourseId != null" >
        #{offlinecourseId,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.eduonline.model.Course" >
    update us_course
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=DATE},
      </if>
      <if test="picUrl != null" >
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="freeState != null" >
        free_state = #{freeState,jdbcType=VARCHAR},
      </if>
      <if test="coverId != null" >
        cover_id = #{coverId,jdbcType=BIGINT},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=DECIMAL},
      </if>
      <if test="commendState != null" >
        commend_state = #{commendState,jdbcType=VARCHAR},
      </if>
      <if test="offlinecourseId != null" >
        offlinecourse_id = #{offlinecourseId,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eduonline.model.Course" >
    update us_course
    set name = #{name,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      modify_time = #{modifyTime,jdbcType=DATE},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      free_state = #{freeState,jdbcType=VARCHAR},
      cover_id = #{coverId,jdbcType=BIGINT},
      salary = #{salary,jdbcType=DECIMAL},
      commend_state = #{commendState,jdbcType=VARCHAR},
      offlinecourse_id = #{offlinecourseId,jdbcType=BIGINT},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 以下自定义 -->
  <select id="queryCourseListByPage" resultType="map">
    select 
    course.id,
    course.name,
    course.free_state,
    course.offlinecourse_id,
    cover.picurl
  from
    us_course course left join us_cover cover 
    on course.cover_id = cover.id
    order by course.create_time desc
  limit #{start}, #{end};
  </select>
  
  <select id="queryCourseById" resultType="map" parameterType="java.lang.Long">
    select 
    course.id,
    course.name,
    course.introduce,
    course.free_state,
    course.salary,
    course.offlinecourse_id,
    cover.picurl
  from
    us_course course left join us_cover cover 
    on course.cover_id = cover.id
  where
    course.id = #{id,jdbcType=BIGINT};
  </select>
  <select id="queryCourseByIds" resultType="map" parameterType="java.lang.Long">
    select 
	    course.id,
	    course.name,
	    course.introduce,
	    course.free_state,
	    course.salary,
	    cover.picurl
	  from
	    us_course course left join us_cover cover 
	    on course.cover_id = cover.id
	  where
	    course.id = #{id,jdbcType=BIGINT};
  </select>
  
  <select id="findCourseByinput" resultType="map">
    select
      course.id,
      course.name,
      course.free_state,
      cover.picurl
    from
      us_course course
      left join us_cover cover
      on course.cover_id = cover.id
    where
      course.name like concat(concat('%',#{inputValue,jdbcType=VARCHAR}),'%') 
  </select>
  
  <select id="queryComnendCourseList" resultType="map">
    select
      course.id,
      course.name,
      course.free_state,
      cover.picurl
    from
      us_course course
      left join us_cover cover
      on course.cover_id = cover.id
    where
      course.commend_state = 1
  </select>
  
  <select id="queryCourseListBysortId" resultType="map" parameterType="java.lang.Long">
  	select
		tempTable.courseId,
	    tempTable.courseName,
	    tempTable.courseFree_state,
	    tempTable.coverPicurl
	from
		us_sort sort
		left join us_course_sort ucs
		on sort.id = ucs.sort_id
		inner join(
		    select course.id As courseId,
		    course.name As courseName,
		    course.free_state As courseFree_state,
		    cover.picurl As coverPicurl from us_course course left join us_cover cover on course.cover_id = cover.id
		) tempTable
		on tempTable.courseId = ucs.course_id
	where
		sort.id = #{sortId,jdbcType=BIGINT}
  </select>
</mapper>